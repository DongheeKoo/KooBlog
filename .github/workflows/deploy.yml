name: Deploy

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      SERVICE_NAME: koo-blog-api
      EKS_CLUSTER_NAME: koo-blog-cluster
      EKS_NAMESPACE: koo-blog
  
    steps:
      - uses: actions/checkout@v4

      - name: Set STAGE environment variable
        run: |
          echo "IMAGE_NAME=${{ env.SERVICE_NAME }}" >> $GITHUB_ENV
    
      - name: Build and Test
        run: |
          ./gradlew build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::122976268003:role/github-actions
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: "true"

      - name: Build and Push Container Image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          SHA_SHORT=$(git rev-parse --short HEAD)
          echo "IMAGE_TAG=$SHA_SHORT" >> $GITHUB_ENV
          docker build -t $REGISTRY/$IMAGE_NAME:$SHA_SHORT .
          docker push $REGISTRY/$IMAGE_NAME:$SHA_SHORT

      - name: Checkout Helm Repository
        uses: actions/checkout@v3
        with:
          repository: DongheeKoo/KooBlogHelm
          path: KooBlogHelm
          token: ${{ secrets.GH_PAT }}

      - name: Update values.yaml with New Image Tag
        run: |
          cd KooBlogHelm/values/${{ env.SERVICE_NAME }}
          yq eval '.deployment.image.tag = "${{ env.IMAGE_TAG }}"' -i values.yaml

      - name: Commit and Push Changes to the Helm Repository
        env:
          GIT_AUTHOR_NAME: ${{ github.actor }}
          GIT_AUTHOR_EMAIL: ${{ github.actor }}@users.noreply.github.com
        run: |
          cd KooBlogHelm
          git config user.name "$GIT_AUTHOR_NAME"
          git config user.email "$GIT_AUTHOR_EMAIL"
          git add values/${{ env.SERVICE_NAME }}/values.yaml
          git commit -m "[자동 커밋] ${{ env.SERVICE_NAME }}의 태그를 ${{ env.IMAGE_TAG }}로 변경"
          git push origin main

      - name: Configure kubectl for EKS
        run: |
          aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER_NAME }} --region ap-northeast-2

      - name: Install or Upgrade Helm Chart
        run: |
          cd KooBlogHelm

          if ! kubectl get namespace ${{ env.EKS_NAMESPACE }} &> /dev/null; then
            kubectl create namespace ${{ env.EKS_NAMESPACE }}
          else
            echo "Namespace ${{ env.EKS_NAMESPACE }} already exists"
          fi
          
          if helm list -n ${{ env.EKS_NAMESPACE }} | grep -q ${{ env.SERVICE_NAME }}; then
            helm upgrade ${{ env.SERVICE_NAME }} ./app \
              --values values/${{ env.SERVICE_NAME }}/values.yaml \
              --namespace koo-blog \
              --wait \
              --timeout=5m \
              --atomic
          else
            helm install ${{ env.SERVICE_NAME }} ./app \
              --values values/${{ env.SERVICE_NAME }}/values.yaml \
              --namespace ${{ env.EKS_NAMESPACE }} \
              --wait \
              --timeout=5m \
              --atomic
          fi
          
          echo "Helm deployment completed successfully!"
          